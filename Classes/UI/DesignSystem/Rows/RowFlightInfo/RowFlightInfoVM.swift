//
//  RowFlightInfoVM.swift
//  Chili Labs
//
//  Generated by Chigevara on 13/05/2020.
//  Copyright Â© 2020 Chili Labs. All rights reserved.
//

import Foundation
import MagazineLayout
import RxFlow
import RxSwift
import RxCocoa

struct FlightInfo: Hashable {
    let departureTime: String
    let departureAirport: String
    let arrivalTime: String
    let arrivalAirport: String
}

struct RowFlightInfoVM: MagazineCellDataType, StepSupportable {
    
    let defaultStep: Step
    let steps = PublishRelay<Step>()

    var sizeMode: MagazineLayoutItemSizeMode {
        return MagazineLayoutItemSizeMode(widthMode: .fullWidth(respectsHorizontalInsets: true),
                                          heightMode: .static(height: 60))
    }

    let flightInfo: FlightInfo

    init(info: FlightInfo, step: Step) {
        self.flightInfo = info
        self.defaultStep = step
    }

    var diffHash: Int {
        return flightInfo.hashValue
    }

    func configurator() -> CellConfigurator {
        return RowFlightInfoConfigurator(item: self)
    }

    func didSelect() {
        self.steps.accept(defaultStep)
    }
}
